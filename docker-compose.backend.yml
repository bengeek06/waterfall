services:
  db_service:
    image: postgres:16
    environment:
      POSTGRES_USER: staging
      POSTGRES_PASSWORD: password
      POSTGRES_DB: staging
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U staging -d staging"]
      interval: 10s
      timeout: 5s
      retries: 5

  guardian_service:
    build:
      context: ./services/guardian_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - LOG_LEVEL=DEBUG
      - DATABASE_URL=postgresql://staging:password@db_service/guardian_staging
      - JWT_SECRET=super-secret-jwt-key
    ports:
      - "5003:5000"
    depends_on:
      db_service:
        condition: service_healthy
    volumes:
      - ./services/guardian_service:/app

  identity_service:
    build:
      context: ./services/identity_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://staging:password@db_service/identity_staging
      - INTERNAL_AUTH_TOKEN=staging-internal-secret
      - JWT_SECRET=super-secret-jwt-key
      - GUARDIAN_SERVICE_URL=http://guardian_service:5000
    ports:
      - "5002:5000"
    depends_on:
      db_service:
        condition: service_healthy
      guardian_service:
        condition: service_started
    volumes:
      - ./services/identity_service:/app

  auth_service:
    build: 
      context: ./services/auth_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - LOG_LEVEL=DEBUG
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - DATABASE_URL=postgresql://staging:password@db_service/auth_staging
      - INTERNAL_AUTH_TOKEN=staging-internal-secret
      - JWT_SECRET=super-secret-jwt-key
      - USER_SERVICE_URL=http://identity_service:5000
    ports:
      - "5001:5000"
    depends_on:
      db_service:
        condition: service_healthy
      identity_service:
        condition: service_started
    volumes:
      - ./services/auth_service:/app

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      URLS: |
        [
          {"url": "/openapi/pm-auth-api.yml", "name": "Auth API"},
          {"url": "/openapi/pm-identity-api.yml", "name": "Identity API"},
          {"url": "/openapi/pm-guardian-api.yml", "name": "Guardian API"}
        ]
    volumes:
      - ./services/auth_service/openapi.yml:/usr/share/nginx/html/openapi/pm-auth-api.yml
      - ./services/identity_service/openapi.yml:/usr/share/nginx/html/openapi/pm-identity-api.yml
      - ./services/guardian_service/openapi.yml:/usr/share/nginx/html/openapi/pm-guardian-api.yml
    ports:
      - "8081:8080"

volumes:
  db_data:
  pgadmin_data:
