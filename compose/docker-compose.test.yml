services:
  db_service:
    image: postgres:16
    environment:
      POSTGRES_USER: staging
      POSTGRES_PASSWORD: password
      POSTGRES_DB: staging
    volumes:
      - ../scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U staging -d staging"]
      interval: 10s
      timeout: 5s
      retries: 5

  guardian_service:
    build:
      context: ../services/guardian_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://staging:password@db_service/guardian_staging
      - JWT_SECRET=super-secret-jwt-key
    ports:
      - "5003:5000"
    depends_on:
      db_service:
        condition: service_healthy
    volumes:
      - ../services/guardian_service:/app

  identity_service:
    build:
      context: ../services/identity_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://staging:password@db_service/identity_staging
      - INTERNAL_AUTH_TOKEN=staging-internal-secret
      - JWT_SECRET=super-secret-jwt-key
      - GUARDIAN_SERVICE_URL=http://guardian_service:5000
    ports:
      - "5002:5000"
    depends_on:
      db_service:
        condition: service_healthy
      guardian_service:
        condition: service_started
    volumes:
      - ../services/identity_service:/app

  auth_service:
    build: 
      context: ../services/auth_service
      target: development
    environment:
      - FLASK_ENV=staging
      - APP_MODE=staging
      - IN_DOCKER_CONTAINER=true
      - LOG_LEVEL=INFO
      - WAIT_FOR_DB=true
      - RUN_MIGRATIONS=true
      - DATABASE_URL=postgresql://staging:password@db_service/auth_staging
      - INTERNAL_AUTH_TOKEN=staging-internal-secret
      - JWT_SECRET=super-secret-jwt-key
      - USER_SERVICE_URL=http://identity_service:5000
    ports:
      - "5001:5000"
    depends_on:
      db_service:
        condition: service_healthy
      identity_service:
        condition: service_started
    volumes:
      - ../services/auth_service:/app

  web_service:
    build:
      context: ../web
      target: deps
    ports:
      - "3000:3000"
    depends_on:
      - auth_service
      - identity_service
      - guardian_service
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - MOCK_API=false
      - OFFLINE_MODE=false
      - AUTH_SERVICE_URL=http://auth_service:5000
      - IDENTITY_SERVICE_URL=http://identity_service:5000
      - GUARDIAN_SERVICE_URL=http://guardian_service:5000
    volumes:
      - ../web:/app
      - /app/node_modules
    command: npm run dev
